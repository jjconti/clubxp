package main;
// Generated 15/11/2006 17:05:00 by Hibernate Tools 3.1.0.beta4

import java.util.Date;
import java.util.HashSet;
import java.util.Iterator;
import java.util.Set;
import java.util.Vector;
import java.util.List;;


/**
 * Liquidacion generated by hbm2java
 */

public class Liquidacion  implements java.io.Serializable {


    // Fields    

     private int idLiq;
     private int mes;
     private int anio;
     private Date fecha;
     private Set recibos = new HashSet(0);


    // Constructors

    /** default constructor */
    public Liquidacion() {
    }

	/** minimal constructor */
    public Liquidacion(int idLiq, int mes, int anio, Date fecha) {
        this.idLiq = idLiq;
        this.mes = mes;
        this.anio = anio;
        this.fecha = fecha;
    }
    
    /** full constructor */
    public Liquidacion(int idLiq, int mes, int anio, Date fecha, Set recibos) {
        this.idLiq = idLiq;
        this.mes = mes;
        this.anio = anio;
        this.fecha = fecha;
        this.recibos = recibos;
    }
    

   
    // Property accessors

    public int getIdLiq() {
        return this.idLiq;
    }
    
    public void setIdLiq(int idLiq) {
        this.idLiq = idLiq;
    }

    public int getMes() {
        return this.mes;
    }
    
    public void setMes(int mes) {
        this.mes = mes;
    }

    public int getAnio() {
        return this.anio;
    }
    
    public void setAnio(int anio) {
        this.anio = anio;
    }

    public Date getFecha() {
        return this.fecha;
    }
    
    public void setFecha(Date fecha) {
        this.fecha = fecha;
    }

    public Set getRecibos() {
        return this.recibos;
    }
    
    public void setRecibos(Set recibos) {
        this.recibos = recibos;
    }
   

    /***
	 * Metodo usado para las pruebas. Retorna una lista de recibos correspondiente al socio
	 * pasado como parametro. 
	 * Si no existe un recibo explicitamente para ese socio, retorna una lista vacia 
	 * @return
	 */
	public List getRecibosFor(Socio socio){
		Vector lista = new Vector();
		
		Iterator i = this.recibos.iterator();
		while(i.hasNext()){
			Recibo r = (Recibo) i.next();
			if (r.getSocio() == socio) {
				lista.add(r);
			}
		}
		return lista;
	}


}
